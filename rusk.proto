syntax = "proto3";
package rusk;
option go_package = "github.com/dusk-network/rusk-schema;rusk";

import "echo.proto";
import "bid.proto";
import "blindbid.proto";
import "transaction.proto";
import "keys.proto";
import "transfer.proto";
import "stake.proto";
import "reward.proto";

message VerifyStateTransitionRequest {
    repeated Transaction txs = 1;
    fixed64 height = 2;
    byte seed = 3;
}

message VerifyStateTransitionResponse {
    repeated fixed64 failed_calls = 1;
}

message ExecuteStateTransitionRequest {
    repeated Transaction txs = 1;
    fixed64 height = 2;
    byte seed = 3;
}

message ExecuteStateTransitionResponse {
    bool success = 1;
    string error_message = 2;
}

message Provisioner {
    bytes public_key_bls = 1;
    bytes raw_public_key_bls = 2;
    repeated Stake stakes = 3;
}

message GetProvisionersRequest {}

message GetProvisionersResponse {
    repeated Provisioner provisioners = 1;
}

message GetHeightRequest {}

message GetHeightResponse {
    uint64 height = 1;
}

service State {
    rpc VerifyStateTransition(VerifyStateTransitionRequest) returns (VerifyStateTransitionResponse) {}
    rpc ExecuteStateTransition(ExecuteStateTransitionRequest) returns (ExecuteStateTransitionResponse) {}
    rpc GetProvisioners(GetProvisionersRequest) returns (GetProvisionersResponse) {}
    rpc GetHeight(GetHeightRequest) returns (GetHeightResponse) {}
}
